{"version":3,"sources":["components/Navbar/index.js","components/Header/index.js","components/Main/index.js","components/Item/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","score","topScore","Header","src","alt","Main","containerClass","incorrect","children","Item","onClick","handleClick","imgSrc","Footer","App","state","selected","images","reset","_this","setState","imageHasBeenSelected","img","filter","i","length","evt","target","Math","max","concat","Object","toConsumableArray","shuffleImages","array","this","j","floor","random","temp","_this2","components_Navbar","components_Header","components_Main","map","components_Item","key","components_Footer","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae2ccf20.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Navbar(props) {\r\n\r\n  function statusClasses () {\r\n    if (props.score) {\r\n      return \"brand-logo center correct\"\r\n    } else {\r\n      return props.topScore ? \"brand-logo center incorrect\" : \"brand-logo center\"\r\n    }\r\n  }\r\n\r\n  function statusMessage() {\r\n    if (props.score) {\r\n      return \"You guessed correctly!\"\r\n    } else {\r\n      return props.topScore ? \"You guessed incorrectly!\" : \"Click an image to begin!\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar-fixed\">\r\n      <nav>\r\n        <div className=\"nav-wrapper teal lighten-2\">\r\n          <span className=\"brand-logo left\"> Mind's Eye </span>\r\n          <span className={statusClasses()}> {statusMessage()} </span>\r\n          <span className=\"brand-logo right\"> Score: {props.score} | Top Score: {props.topScore} </span>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"parallax-container\">\r\n      <div className=\"parallax\">\r\n        <img src=\"http://www.wallpaperstalk.com/wp-content/uploads/2019/03/imCv7mGw5.jpg\" alt=\"\"></img>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Main(props) {\r\n  let containerClass = props.incorrect ? 'container shake' : 'container'\r\n  return (\r\n    <main className={containerClass}>\r\n      <div className=\"row\">\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Item(props) {\r\n  return (\r\n    <div className=\"col s6 m4 l3 pointer zoom\" onClick={props.handleClick}>\r\n      <div className=\"card\">\r\n        <div className=\"card-image\">\r\n          <img src={props.imgSrc} alt=\"\"></img>\r\n        </div>\r\n        {props.score}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"page-footer teal lighten-2\">\r\n      <div className=\"footer-copyright\">\r\n        <div className=\"container\">\r\n          Â© 2019 Mind's Eye Click Game\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Item from './components/Item'\nimport Footer from './components/Footer'\n\nclass App extends React.Component {\n\n  state = {\n    selected: [],\n    topScore: 0,\n    images: [\n      '/images/180x180-sprites/tile000.png',\n      '/images/180x180-sprites/tile003.png',\n      '/images/180x180-sprites/tile008.png',\n      '/images/180x180-sprites/tile009.png',\n      '/images/180x180-sprites/tile010.png',\n      '/images/180x180-sprites/tile012.png',\n      '/images/180x180-sprites/tile013.png',\n      '/images/180x180-sprites/tile014.png',\n      '/images/180x180-sprites/tile016.png',\n      '/images/180x180-sprites/tile018.png',\n      '/images/180x180-sprites/tile023.png',\n      '/images/180x180-sprites/tile024.png'\n    ]\n  }\n\n  reset = () => this.setState({ selected: []})\n\n  imageHasBeenSelected = img => {\n    return this.state.selected.filter(i => { return i === img }).length ? true : false\n  }\n\n  handleClick = evt => {\n    if (this.imageHasBeenSelected(evt.target.src)) {\n      // Game over\n      this.reset()\n      this.setState({topScore: Math.max(this.state.topScore, this.state.selected.length)})\n    } else {\n      // Still playing\n      this.setState({ selected: [...this.state.selected, evt.target.src] })\n    }\n    this.shuffleImages()\n  }\n\n  shuffleImages() {\n    let array = this.state.images\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1))\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    this.setState({ images: array })\n  }\n\n  render() {\n    let incorrect = this.state.topScore && !this.state.selected.length\n    return (\n      <div>\n        <Navbar score={this.state.selected.length} topScore={this.state.topScore} />\n        <Header />\n        <Main incorrect={incorrect}>\n          {this.state.images.map((img, i) => {\n            return <Item key={i} imgSrc={img} handleClick={this.handleClick} />\n          })}\n        </Main>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}